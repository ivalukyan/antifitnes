import logging

from aiogram import F, Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import (
    Message,
    InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery,
)
from db.db_users import get_phone_number, get_name, check_login

router = Router()


class Form(StatesGroup):
    """
    number_login - state for input number user
    """

    # Loging
    number_login = State()


# Login in your personal account
@router.message(Command('login'))
async def login(message: Message, state: FSMContext) -> None:
    await state.set_state(Form.number_login)
    await message.answer("<b>–í–•–û–î –í –°–ò–°–¢–ï–ú–£</b>\n\n"
                         "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ")


@router.message(Form.number_login)
async def input_number(message: Message, state: FSMContext) -> None:
    await state.update_data(input_number=message.text)
    data = await state.get_data()
    if check_login(message.from_user.id):
        if get_phone_number(message.from_user.id)[-10:] == data['input_number'][-10:]:
            await message.answer(f"{get_name(message.from_user.id)}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–ª—É–±!")
            await message.answer("üìé–ü—Ä–æ—Ñ–∏–ª—åüìé", reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", callback_data="history_tren"),
                    InlineKeyboardButton(text="–ö–æ–ª-–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –±–∞–ª–ª–æ–≤", callback_data="ref_bonus"),
                ],
                [
                    InlineKeyboardButton(text="–ê–±–æ–Ω–µ–º–µ–Ω—Ç", callback_data="card"),
                    InlineKeyboardButton(text="–ù–æ—Ä–º–∞—Ç–∏–≤—ã", callback_data="normatives")
                ]
            ]))
            await state.clear()
        else:
            await message.answer("–£–ø—Å...–ø–æ—Ö–æ–∂–µ –æ—à–∏–±–∫–∞ –≤ –≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    else:
        await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å")


@router.callback_query(F.data == "history_tren")
async def callback_history_tren(callback: CallbackQuery, state: FSMContext) -> None:
    await callback.message.edit_text("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–µ—Ç.",
                                     reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                                         [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_menu")]
                                     ]))
    await state.clear()


@router.callback_query(F.data == "ref_bonus")
async def callback_ref_bonus(callback: CallbackQuery, state: FSMContext) -> None:
    await callback.message.edit_text("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–æ–Ω—É—Å–æ–≤ –Ω–µ—Ç",
                                     reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                                         [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_menu")]
                                     ]))
    await state.clear()


@router.callback_query(F.data == "card")
async def callback_card(callback: CallbackQuery, state: FSMContext) -> None:
    await callback.message.edit_text("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞",
                                     reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                                         [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_menu")]
                                     ]))
    await state.clear()


@router.callback_query(F.data == "normatives")
async def callback_normatives(callback: CallbackQuery, state: FSMContext) -> None:
    await callback.message.edit_text("üìâ–ê–ù–ê–õ–ò–ó –ù–û–†–ú–ê–¢–ò–í–û–íüìâ\n\n"
                                     "–≠–ª–µ–º–µ–Ω—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...",
                                     reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                                         [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_menu")]
                                     ]))
    await state.clear()


@router.callback_query(F.data == "back_menu")
async def callback_back_menu(callback: CallbackQuery, state: FSMContext) -> None:
    await callback.message.edit_text("üìé–ü—Ä–æ—Ñ–∏–ª—åüìé", reply_markup=InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", callback_data="history_tren"),
            InlineKeyboardButton(text="–ö–æ–ª-–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –±–∞–ª–ª–æ–≤", callback_data="ref_bonus"),
        ],
        [
            InlineKeyboardButton(text="–ê–±–æ–Ω–µ–º–µ–Ω—Ç", callback_data="card"),
            InlineKeyboardButton(text="–ù–æ—Ä–º–∞—Ç–∏–≤—ã", callback_data="normatives")
        ]
    ]))
    await state.clear()
